//Below is the way to use enumerations// Enumeration of type toppingsealed trait Topping;case object Cheese extends Topping;case object Pepperoni extends Topping;case object Sausage extends Topping;case object Mushrooms extends Topping;case object Onions extends Topping;// Enumeration of type crustSizesealed trait CrustSize;case object SmallCrustSize extends CrustSize;case object MediumCrustSize extends CrustSize;case object LargeCrustSize extends CrustSize;// Enumeration of type crust type of the pizzasealed trait CrustType;case object RegularCrustType extends CrustType;case object ThinCrustType extends CrustType;case object ThickCrustType extends CrustType;//Pizza Classclass samplePizza(var crustSize: CrustSize = MediumCrustSize, var crustType: CrustType = ThickCrustType) {  //creating list of toppings to use on pizza  val toppings = scala.collection.mutable.ArrayBuffer[Topping]();  override def toString(): String = {    s"""       |Crust Size: $crustSize       |Crust Type: $crustType       |Toppings: $toppings""".stripMargin  };  def addTopping(t: Topping) = {    toppings += t  };  def removeTopping(t: Topping) = {    toppings -= t  };  def removeAllToppings = {    toppings.clear()  };};//Now we create object to instantiate the pizza class and add thr toppings of our liking.!!!!object Pizza extends App {  val pizza = new samplePizza;  pizza.addTopping(Cheese);  pizza.addTopping(Pepperoni);  println(pizza);  pizza.removeTopping(Cheese);  pizza.removeTopping(Cheese);  println(pizza);  println(pizza.removeAllToppings);  println(pizza);}